// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "http://tkwallet",
            "email": "254606826@qq.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/erc20/mint": {
            "post": {
                "description": "Mint ERC20",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "erc20"
                ],
                "summary": "Mint ERC20",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ResponseCommonSingle"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "not"
                        }
                    }
                }
            }
        },
        "/erc20/transfer": {
            "post": {
                "description": "Transfer ERC20",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "erc20"
                ],
                "summary": "Transfer ERC20",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ResponseCommonSingle"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "not"
                        }
                    }
                }
            }
        },
        "/erc721/mint": {
            "post": {
                "description": "Mint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "erc721"
                ],
                "summary": "Mint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ResponseCommonSingle"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "not"
                        }
                    }
                }
            }
        },
        "/erc721/transfer": {
            "post": {
                "description": "Transfer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "erc721"
                ],
                "summary": "Transfer",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ResponseCommonSingle"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "not"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "responses.Err": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "code error",
                    "type": "integer"
                },
                "message": {
                    "description": "description error",
                    "type": "string"
                }
            }
        },
        "responses.ResponseCommonSingle": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "$ref": "#/definitions/responses.Err"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "apikey",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
